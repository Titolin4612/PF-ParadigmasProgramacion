@{
    ViewData["Title"] = "Blessings & Curses - En Partida";
    string cardBackDeckPath = Url.Content("~/images/cards/card_back.png");

    // --- DEFINE AQUÍ LAS RUTAS A TUS IMÁGENES GLOBALES ---
    // CAMBIA "background-card-generic.png" por el nombre de tu archivo de fondo global
    string globalCardBackgroundUrl = Url.Content("~/images/cards/background-card-generic.png");
    // CAMBIA "title-logo.png" por el nombre de tu archivo de logo
    string gameLogoUrl = Url.Content("~/images/title-logo.png");

    var jugadores = ViewBag.Jugadores as List<CL_ProyectoFinalPOO.Clases.Jugador> ?? new();
    var jugadorActual = ViewBag.JugadorActual as CL_ProyectoFinalPOO.Clases.Jugador;
    dynamic cartaRevelada = ViewBag.CartaRevelada;
    var historialJuego = ViewBag.HistorialJuego as List<string> ?? new();
    bool juegoTerminado = ViewBag.JuegoTerminado ?? false;
    string mensajeError = ViewBag.MensajeError as string;
    int totalCartasEnMazo = ViewBag.TotalCartasEnMazo ?? 0;
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/juego-pantalla.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" crossorigin="anonymous" />
    <link href="https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@400;700&family=Sorts+Mill+Goudy&display=swap" rel="stylesheet">

</head>
<body class="game-active-bg">
    <div class="game-container play-screen">

        @if (!string.IsNullOrEmpty(mensajeError))
        {
            <div class="error-banner" id="gameErrorBanner"><i class="fas fa-exclamation-triangle"></i> @mensajeError</div>
        }

        <div class="turn-indicator @(juegoTerminado ? "turn-ended" : "")">
            @if (juegoTerminado && string.IsNullOrEmpty(mensajeError))
            {
                <span>¡La partida ha concluido!</span>
            }
            else if (jugadorActual != null && !juegoTerminado)
            {
                <span>Turno de: <strong>@jugadorActual.Nickname</strong></span>
            }
            else if (!juegoTerminado)
            {
                <span>Cargando...</span>
            }
        </div>

        <div class="player-areas-container">
            @foreach (var jugador in jugadores)
            {
                    <div class="player-box @(jugador.Nickname == jugadorActual?.Nickname ? "current-player-turn" : "")">
                        <div class="player-avatar"><i class="fas fa-user-shield"></i></div>
                        <h4 class="player-nickname">@jugador.Nickname</h4>
                        <div class="player-stats">
                            <p><i class="fas fa-coins gold-icon"></i> Puntos: <strong>@jugador.Puntos</strong></p>
                            <p><i class="fas fa-layer-group card-count-icon"></i> Cartas: <strong>@(jugador.L_cartas_jugador?.Count ?? 0)</strong></p>
                        </div>
                    </div>
            }
        </div>

        <div class="central-game-board">
            <div class="deck-and-actions-column">
                <div class="deck-pile">
                    @if (!juegoTerminado)
                    {
                            <form asp-controller="Reglas" asp-action="BarajaCatalogo" method="post">
                                <button type="submit" class="back-button tertiary-action-button"><i class="fas fa-eye"></i> Ver Mazo</button>
                            </form>
                        @if (totalCartasEnMazo > 0)
                        {
                        }
                    }
                    else
                    {
                        <div class="deck-image-placeholder"><i class="fas fa-times-circle fa-3x" style="color: #d0021b;"></i><p>Mazo agotado</p></div>
                    }
                    <p class="deck-count-text">Destino: <strong>@totalCartasEnMazo</strong> cartas</p>
                </div>
                <div class="game-actions">
                    @if (!juegoTerminado)
                    {
                            <form asp-controller="Juego" asp-action="CogerCarta" method="post" id="formCogerCarta" style="@(cartaRevelada != null ? "display:none;" : "display:block;")">
                                <button type="submit" class="rules-button"><i class="fas fa-hand-sparkles"></i> Coger Carta</button>
                            </form>
                            <form asp-controller="Juego" asp-action="SiguienteTurno" method="post" id="formSiguienteTurno" style="@(cartaRevelada == null ? "display:none;" : "display:block;")">
                                <button type="submit" class="turno-button"><i class="fas fa-arrow-right"></i> Siguiente Turno</button>
                            </form>
                    }
                    else
                    {
                        <p style="text-align:center; font-weight:bold; margin-top: 10px;">Partida Finalizada</p>
                    }
                    <form asp-controller="Home" asp-action="Index" method="post" style="margin-top: auto;">
                        <button type="submit" class="back-button"><i class="fas fa-sign-out-alt"></i> Salir</button>
                    </form>
                </div>
            </div>

            <div class="revealed-card-zone" id="revealedCardZone">
                @if (cartaRevelada != null)
                {
                    string tipoCarta = (string)cartaRevelada.TipoCarta ?? "desconocido";
                    tipoCarta = tipoCarta.Length > 0 ? char.ToUpper(tipoCarta[0]) + tipoCarta.Substring(1) : "Desconocido"; // Capitalizar

                    int puntosCarta = cartaRevelada.Puntos;
                    string puntosClaseTexto = puntosCarta > 0 ? "points-positive" :
                                              puntosCarta < 0 ? "points-negative" : "points-neutral";
                    string puntosTextoAMostrar = (puntosCarta >= 0 ? "+" : "") + puntosCarta;
                    if (puntosCarta == 0) puntosTextoAMostrar = "0";

                    string descripcionRaw = (string)cartaRevelada.Descripcion ?? "";
                    string descripcionHtml = System.Text.RegularExpressions.Regex.Replace(descripcionRaw, @"\*(.*?)\*", "<strong>$1</strong>");

                    string rarezaCarta = (string)cartaRevelada.Rareza;
                    string bendicionCarta = (string)cartaRevelada.Bendicion;
                    string maleficioCarta = (string)cartaRevelada.Maleficio; 

                        <div class="revealed-game-card animate-in">
                            <img src="@globalCardBackgroundUrl" alt="Fondo de Carta" class="card-visual-background-game" />
                            <div class="card-content-overlay-game"></div> @* Gradiente superpuesto *@

                            <div class="card-inner-content-game"> @* Contenido sobre el gradiente *@
                                <div class="card-top-section-game">
                                    <h3 class="card-title-game">@cartaRevelada.Nombre</h3>
                                    <p class="card-mythology-game">@cartaRevelada.Mitologia</p>
                                    <div class="card-logo-area-game">
                                        <img src="@gameLogoUrl" alt="Logo del Juego" />
                                    </div>
                                </div>

                                <div class="card-middle-section-game">
                                    <div class="card-attributes-display-game">
                                        <p><span class="attr-label">Tipo:</span> <span class="attr-value">@tipoCarta</span></p>
                                    @if ((tipoCarta == "Juego" || tipoCarta == "juego") && !string.IsNullOrEmpty(rarezaCarta))
                                    {
                                                <p><span class="attr-label">Rareza:</span> <span class="attr-value rarity @($"rarity-{rarezaCarta.ToLowerInvariant()}")">@rarezaCarta</span></p>
                                    }
                                    else if ((tipoCarta == "Premio" || tipoCarta == "premio") && !string.IsNullOrEmpty(bendicionCarta))
                                    {
                                                <p><span class="attr-label">Bendición:</span> <span class="attr-value">@bendicionCarta</span></p>
                                    }
                                    else if ((tipoCarta == "Castigo" || tipoCarta == "castigo") && !string.IsNullOrEmpty(maleficioCarta))
                                    {
                                                <p><span class="attr-label">Maleficio:</span> <span class="attr-value">@maleficioCarta</span></p>
                                    }
                                    </div>

                                    <div class="card-description-text-game">
                                    @Html.Raw(descripcionHtml)
                                    </div>
                                </div>

                                <div class="card-points-footer-game">
                                    <span class="points-text-label">Puntos:</span>
                                    <span class="points-value-display @puntosClaseTexto">@puntosTextoAMostrar</span>
                                </div>
                            </div>

                            <div class="points-change-floater @puntosClaseTexto">
                            @puntosTextoAMostrar
                            </div>
                        </div>
                }
                else if (!juegoTerminado)
                {
                    <div class="card-display-placeholder" id="cardPlaceholder"><i class="fas fa-scroll placeholder-icon"></i><p>Invoca tu destino...</p></div>
                }
                else
                {
                    <div class="card-display-placeholder" id="cardPlaceholderFinished"><i class="fas fa-gavel placeholder-icon" style="color: #ffd700;"></i><p>El juicio ha terminado.</p></div>
                }
            </div>
        </div>

        <div class="game-history-log">
            <h4><i class="fas fa-book-open"></i> Crónicas del Destino</h4>
            <ul> @foreach (var entrada in historialJuego.TakeLast(10).Reverse())
                {
                    <li>@Html.Raw(entrada)</li>
                } </ul>
        </div>

        <img src="@Url.Content("~/images/character-male.png")" alt="Decoración" class="character male game-bg-character" />
        <img src="@Url.Content("~/images/character-female.png")" alt="Decoración" class="character female game-bg-character" />
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const errorBanner = document.getElementById('gameErrorBanner');
            if (errorBanner) { setTimeout(() => { errorBanner.style.transition = 'opacity 0.5s ease-out'; errorBanner.style.opacity = '0'; setTimeout(() => errorBanner.remove(), 500); }, 7000); }
            const logContainer = document.querySelector('.game-history-log ul');
            if (logContainer) { logContainer.scrollTop = logContainer.scrollHeight; }
            const revealedCardElement = document.querySelector('.revealed-game-card.animate-in');
            if (revealedCardElement) {
                revealedCardElement.style.animation = 'none'; void revealedCardElement.offsetHeight; revealedCardElement.style.animation = ''; 
                const pointsFloater = revealedCardElement.querySelector('.points-change-floater');
                if (pointsFloater) { pointsFloater.style.animation = 'none'; void pointsFloater.offsetHeight; pointsFloater.style.animation = ''; }
            }
        });
    </script>
</body>
</html>